<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://codehelen.github.io</id>
    <title>CodeHelen&apos;s Blog</title>
    <updated>2020-07-06T05:43:31.689Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://codehelen.github.io"/>
    <link rel="self" href="http://codehelen.github.io/atom.xml"/>
    <subtitle>To live is to toss</subtitle>
    <logo>http://codehelen.github.io/images/avatar.png</logo>
    <icon>http://codehelen.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, CodeHelen&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[JRebel热部署插件的使用]]></title>
        <id>http://codehelen.github.io/post/jrebel/</id>
        <link href="http://codehelen.github.io/post/jrebel/">
        </link>
        <updated>2020-07-06T03:38:11.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1why-jrebel">1.WHY <code>JRebel</code>?</h2>
<p>在和前端联调的过程中，总是会发现在写<code>BUG</code>的过程中总是会有漏写的<code>BUG</code>，每次改动后还需要重启<code>Tomcat</code>，简直是大大的浪费时间和生命。此时，热部署就很好地解决这个问题；</p>
<h2 id="2jrebel简介">2.<code>JRebel</code>简介：</h2>
<blockquote>
<p>JRebel是一个与应用服务器集成的JVM Java代理，使类可以用现有的类加载器重新加载。只有更改后的类才会重新编译并立即在运行的应用程序中重新加载。使用JRebel，您无需等待构建和重新部署来更改代码。只需编写代码并刷新浏览器即可。</p>
</blockquote>
<h2 id="2jrebel的安装和crack">2.<code>JRebel</code>的安装和<code>crack</code></h2>
<h3 id="21-在idea下载jrebel插件">2.1 在IDEA下载<code>JRebel</code>插件：</h3>
<img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706130205259.png" alt="image-20200706130205259" style="zoom: 50%;" />
<p>安装后重启</p>
<h3 id="22jrebel的激活">2.2<code>JRebel</code>的激活</h3>
<img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706131537127.png" alt="image-20200706131537127" style="zoom:50%;" />
<ol>
<li>在<code>File</code>&gt;<code>JRebel&amp;XRebel</code>&gt;<code>Change License</code>页面</li>
<li><a href="https://www.guidgen.com/">获取GUIDs</a></li>
<li>服务器地址格式：<code>https://jrebel.qekang.com/{GUID}</code></li>
<li>邮箱任意</li>
<li>点击<code>Change license</code>激活</li>
</ol>
<h3 id="23-jrebel的配置">2.3 <code>JRebel</code>的配置</h3>
<ol>
<li>
<p>选择你的项目：在<code>JRebel</code>的<code>Panel</code>里打钩：</p>
<img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706132313258.png" alt="image-20200706132313258" style="zoom:50%;" />
</li>
</ol>
<img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706132504405.png" alt="image-20200706132504405" style="zoom:50%;" />
<p>2.解决无法进入断点问题：</p>
<ol>
<li>在<code>Tomcat</code>里复制DEBUG下的<code>JAVA_OPTS</code>的<code>value</code></li>
</ol>
<img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706132615734.png" alt="image-20200706132615734" style="zoom:50%;" />
<ol start="2">
<li>
<p>整理<code>value</code> 去除<code>\</code>等转义字符，在<code>JRebel Debug</code>里新增一个<code>JAVA_OPTS</code>，将刚才格式化的value粘贴（一定要先去除字符，顺便把端口改好，在粘贴）</p>
<img src="C:\Users\ZM\AppData\Roaming\Typora\typora-user-images\image-20200706133001974.png" alt="image-20200706133001974" style="zoom:67%;" />
</li>
</ol>
<p>3.此时，可以以<code>DEBUG</code>模式启动你的项目了：</p>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/helen1234/picgo/raw/master/image-20200706133225156.png" alt="image-20200706133225156" loading="lazy"></figure>
<h3 id="3常用的操作">3.常用的操作：</h3>
<ol>
<li>当修改Java文件时，快捷键： <code>ctrl</code> + <code>shift</code> + <code>F9</code>,进行热部署</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL随手记]]></title>
        <id>http://codehelen.github.io/post/mysql-sui-shou-ji/</id>
        <link href="http://codehelen.github.io/post/mysql-sui-shou-ji/">
        </link>
        <updated>2020-06-23T05:49:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="mysql笔记">MYSQL笔记</h1>
<h1 id="1-初始">1 初始</h1>
<h3 id="11-什么是数据库database">1.1 什么是数据库（DataBase）</h3>
<p>数据库是一个长期存储在计算机内的，有组织的，有共享的，统一管理的数据集合。</p>
<h3 id="12-表">1.2 表</h3>
<p>数据库表示一系列二维数组的集合，用来存储数据和操作数据的逻辑结构。</p>
<h3 id="13-sql语言的4个部分">1.3 SQL语言的4个部分</h3>
<ol>
<li><strong>数据定义语言（DDL）</strong>：DROP，CREATE，ALTER</li>
<li><strong>数据操作语言（DML）</strong>：INSERT，UPDATE，DELETE</li>
<li><strong>数据查询语言（DQL）</strong>：SELECT</li>
<li><strong>数据控制语言（DCL）</strong>：GRANT,REVOKE,COMMIT,ROLLBACK</li>
</ol>
<h4 id="例如用sql创建一个student表">例如：用SQL创建一个student表</h4>
<pre><code class="language-mysql">CREATE TABLE students(
    student_id INT UNSIGNED,
    name VARCHAR(30),
    sex CHAR(1),
    bitth DATE,
    PRIMARY KEY (student_id)
);
</code></pre>
<h4 id="下面来插入一条数据">下面来插入一条数据：</h4>
<pre><code class="language-mysql">INSERT INTO students (student_id,`name`,sex,bitth) VALUES (41302101,'codehelen',1,'1996-12-01');
</code></pre>
<h4 id="查找数据">查找数据：</h4>
<pre><code class="language-mysql">select * from students where student_id = 41302101;
</code></pre>
<h2 id=""></h2>
<h1 id="2mysql数据库的基本操作">2.MySQL数据库的基本操作</h1>
<p>在安装好mysql后，会自带一些数据库，可以使用指令来查看：</p>
<pre><code class="language-mysql">SHOW DATABASES;
</code></pre>
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522202439.png" style="zoom:80%;" />
<h4 id="21数据库">2.1数据库</h4>
<p>​	创建数据库是在系统磁盘上划分一块区域用于数据的存储和管理。如果管理员在设置权限的时候为用户创建了数据库，则可以直接使用。否则自己创建数据库。MySQL中创建数据库的基本SQL语法格式为：</p>
<pre><code class="language-mysql">CREATE DATABASE codehelen_study;
</code></pre>
<div align="left">
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522203115.png" style="zoom:80%;" />
</div>
<blockquote>
<p>使用<code>DROP DATABASE</code>命令时，需要谨慎，MySQL 没有提示，且不会有确认信息，删除该数据后，数据库中存储的表和数据一同被删除，而且不能恢复。</p>
</blockquote>
<h3 id="22各种引擎的选择">2.2各种引擎的选择</h3>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/helen1234/picgo/raw/master/20200522204448.png" alt="" loading="lazy"></figure>
<ol>
<li>如果要提供提交，回滚，崩溃恢复能力的事务安全（ACID）能力，并要求实现并发控制，innoDB 是个很好的选择。</li>
<li>如果只是用来存储插入和查询记录，MyISAM引擎能提供较高的处理效率。</li>
<li>如果只有INSERT和SELECT操作，可以选择Archive引擎，该引擎支持高并发的插入操作，但是本身并不是事务安全的。它非常适合存储归档数据。记录日志信息可以使用该引擎。</li>
</ol>
<p><strong>总结：</strong> 使用哪一种引擎要根据需求灵活选择，一个数据库中多个表可以使用不同的引擎，来满足各种性能和实际需求。使用合适的存储引擎，将会提高整个数据库的性能。</p>
<blockquote>
<p>如果查看当前的默认存储引擎？</p>
<p>使用如下的SQL：</p>
<pre><code class="language-mysql">SHOW VARIABLES LIKE '%storage_engine%'
</code></pre>
</blockquote>
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522205728.png" style="zoom:80%;" />
<h1 id="3数据库表的基本操作">3.数据库表的基本操作</h1>
<blockquote>
<p>在创建完数据库之后，接下来的工作就是创建数据库表了，所谓的创建数据库表，指的是在已经创建好的数据库中建立新表，创建数据库表的过程就是规定数据列的属性的过程。同时也是实施数据完整性（包括实体完整性，引用完整性，引用完整性，域完整性）约束过程。</p>
</blockquote>
<h3 id="31-创建数据表的基本语法">3.1 创建数据表的基本语法：</h3>
<pre><code class="language-mysql">CREATE TABLE (
	字段名1 数据类型[列级别的约束条件][默认值],
    字段名2 数据类型[列级别的约束条件][默认值],
    字段名3 数据类型[列级别的约束条件][默认值],
    字段名4 数据类型[列级别的约束条件][默认值],
    ...
    表级别的约束
);
</code></pre>
<h5 id="需要注意的地方">需要注意的地方：</h5>
<ol>
<li>要创建的表的名称，不区分大小写，不能使用SQL关键字 例如：<code>DROP</code>,<code>ALTER</code>，<code>INSERT</code></li>
<li>数据表中每一个列的名称和数据类型，如果创建多个列，要用逗号隔开。</li>
</ol>
<h3 id="32-多字段联合主键">3.2 多字段联合主键</h3>
<p>语法如下：</p>
<pre><code class="language-mysql">PRIMARY KEY [字段1,字段2..字段n]
</code></pre>
<p>**例如：**为了唯一确定一个员工，可以把<code>name</code>,<code>deptId</code>,联合起来作为主键，SQL语法如下：</p>
<pre><code class="language-mysql">CREATE TABLE emp(
	`name` VARCHAR(25),
	deptId INT(11),
	salary FLOAT,
	PRIMARY KEY(`name`,deptId)
)
</code></pre>
<h1 id="4mysql的函数">4.MySQL的函数</h1>
<ol>
<li>绝对值ABS：</li>
</ol>
<pre><code class="language-mysql">1. SELECT ABS(-1) FROM DUAL;
</code></pre>
<ol start="2">
<li>π的值PI()：</li>
</ol>
<pre><code class="language-mysql">SELECT PI();
</code></pre>
<ol start="3">
<li>平方根函数SQRT</li>
</ol>
<pre><code class="language-mysql">SELECT SQRT(9);
#如果是负数，则返回NULL;
</code></pre>
<ol start="4">
<li>求余数MOD:</li>
</ol>
<pre><code class="language-mysql">SELECT MOD(15,14);
#求15对14的余数。对小数部分数值也起作用
</code></pre>
<h1 id="mysql的基本架构示意图">MySQL的基本架构示意图：</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>http://codehelen.github.io/post/hello-gridea/</id>
        <link href="http://codehelen.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<h1 id="mysql笔记">MYSQL笔记</h1>
<h1 id="1-初始">1 初始</h1>
<h3 id="11-什么是数据库database">1.1 什么是数据库（DataBase）</h3>
<p>数据库是一个长期存储在计算机内的，有组织的，有共享的，统一管理的数据集合。</p>
<h3 id="12-表">1.2 表</h3>
<p>数据库表示一系列二维数组的集合，用来存储数据和操作数据的逻辑结构。</p>
<h3 id="13-sql语言的4个部分">1.3 SQL语言的4个部分</h3>
<ol>
<li><strong>数据定义语言（DDL）</strong>：DROP，CREATE，ALTER</li>
<li><strong>数据操作语言（DML）</strong>：INSERT，UPDATE，DELETE</li>
<li><strong>数据查询语言（DQL）</strong>：SELECT</li>
<li><strong>数据控制语言（DCL）</strong>：GRANT,REVOKE,COMMIT,ROLLBACK</li>
</ol>
<h4 id="例如用sql创建一个student表">例如：用SQL创建一个student表</h4>
<pre><code class="language-mysql">CREATE TABLE students(
    student_id INT UNSIGNED,
    name VARCHAR(30),
    sex CHAR(1),
    bitth DATE,
    PRIMARY KEY (student_id)
);
</code></pre>
<h4 id="下面来插入一条数据">下面来插入一条数据：</h4>
<pre><code class="language-mysql">INSERT INTO students (student_id,`name`,sex,bitth) VALUES (41302101,'codehelen',1,'1996-12-01');
</code></pre>
<h4 id="查找数据">查找数据：</h4>
<pre><code class="language-mysql">select * from students where student_id = 41302101;
</code></pre>
<h2 id=""></h2>
<h1 id="2mysql数据库的基本操作">2.MySQL数据库的基本操作</h1>
<p>在安装好mysql后，会自带一些数据库，可以使用指令来查看：</p>
<pre><code class="language-mysql">SHOW DATABASES;
</code></pre>
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522202439.png" style="zoom:80%;" />
<h4 id="21数据库">2.1数据库</h4>
<p>​	创建数据库是在系统磁盘上划分一块区域用于数据的存储和管理。如果管理员在设置权限的时候为用户创建了数据库，则可以直接使用。否则自己创建数据库。MySQL中创建数据库的基本SQL语法格式为：</p>
<pre><code class="language-mysql">CREATE DATABASE codehelen_study;
</code></pre>
<div align="left">
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522203115.png" style="zoom:80%;" />
</div>
<blockquote>
<p>使用<code>DROP DATABASE</code>命令时，需要谨慎，MySQL 没有提示，且不会有确认信息，删除该数据后，数据库中存储的表和数据一同被删除，而且不能恢复。</p>
</blockquote>
<h3 id="22各种引擎的选择">2.2各种引擎的选择</h3>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/helen1234/picgo/raw/master/20200522204448.png" alt="" loading="lazy"></figure>
<ol>
<li>如果要提供提交，回滚，崩溃恢复能力的事务安全（ACID）能力，并要求实现并发控制，innoDB 是个很好的选择。</li>
<li>如果只是用来存储插入和查询记录，MyISAM引擎能提供较高的处理效率。</li>
<li>如果只有INSERT和SELECT操作，可以选择Archive引擎，该引擎支持高并发的插入操作，但是本身并不是事务安全的。它非常适合存储归档数据。记录日志信息可以使用该引擎。</li>
</ol>
<p><strong>总结：</strong> 使用哪一种引擎要根据需求灵活选择，一个数据库中多个表可以使用不同的引擎，来满足各种性能和实际需求。使用合适的存储引擎，将会提高整个数据库的性能。</p>
<blockquote>
<p>如果查看当前的默认存储引擎？</p>
<p>使用如下的SQL：</p>
<pre><code class="language-mysql">SHOW VARIABLES LIKE '%storage_engine%'
</code></pre>
</blockquote>
<img src="https://gitee.com/helen1234/picgo/raw/master/20200522205728.png" style="zoom:80%;" />
<h1 id="3数据库表的基本操作">3.数据库表的基本操作</h1>
<blockquote>
<p>在创建完数据库之后，接下来的工作就是创建数据库表了，所谓的创建数据库表，指的是在已经创建好的数据库中建立新表，创建数据库表的过程就是规定数据列的属性的过程。同时也是实施数据完整性（包括实体完整性，引用完整性，引用完整性，域完整性）约束过程。</p>
</blockquote>
<h3 id="31-创建数据表的基本语法">3.1 创建数据表的基本语法：</h3>
<pre><code class="language-mysql">CREATE TABLE (
	字段名1 数据类型[列级别的约束条件][默认值],
    字段名2 数据类型[列级别的约束条件][默认值],
    字段名3 数据类型[列级别的约束条件][默认值],
    字段名4 数据类型[列级别的约束条件][默认值],
    ...
    表级别的约束
);
</code></pre>
<h5 id="需要注意的地方">需要注意的地方：</h5>
<ol>
<li>要创建的表的名称，不区分大小写，不能使用SQL关键字 例如：<code>DROP</code>,<code>ALTER</code>，<code>INSERT</code></li>
<li>数据表中每一个列的名称和数据类型，如果创建多个列，要用逗号隔开。</li>
</ol>
<h3 id="32-多字段联合主键">3.2 多字段联合主键</h3>
<p>语法如下：</p>
<pre><code class="language-mysql">PRIMARY KEY [字段1,字段2..字段n]
</code></pre>
<p>**例如：**为了唯一确定一个员工，可以把<code>name</code>,<code>deptId</code>,联合起来作为主键，SQL语法如下：</p>
<pre><code class="language-mysql">CREATE TABLE emp(
	`name` VARCHAR(25),
	deptId INT(11),
	salary FLOAT,
	PRIMARY KEY(`name`,deptId)
)
</code></pre>
<h1 id="4mysql的函数">4.MySQL的函数</h1>
<ol>
<li>绝对值ABS：</li>
</ol>
<pre><code class="language-mysql">1. SELECT ABS(-1) FROM DUAL;
</code></pre>
<ol start="2">
<li>π的值PI()：</li>
</ol>
<pre><code class="language-mysql">SELECT PI();
</code></pre>
<ol start="3">
<li>平方根函数SQRT</li>
</ol>
<pre><code class="language-mysql">SELECT SQRT(9);
#如果是负数，则返回NULL;
</code></pre>
<ol start="4">
<li>求余数MOD:</li>
</ol>
<pre><code class="language-mysql">SELECT MOD(15,14);
#求15对14的余数。对小数部分数值也起作用
</code></pre>
<h1 id="mysql的基本架构示意图">MySQL的基本架构示意图：</h1>
]]></content>
    </entry>
</feed>